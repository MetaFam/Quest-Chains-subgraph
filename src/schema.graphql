type Global @entity {
  id: ID!
  factoryAddress: Bytes!
  templateAddress: Bytes!
  tokenAddress: Bytes!
  adminAddress: Bytes!
  treasuryAddress: Bytes!
  paymentToken: ERC20Token!
  upgradeFee: BigInt!
  questChainCount: Int!
}

type ERC20Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type QuestChainToken @entity {
  id: ID!
  questChain: QuestChain!
  tokenId: BigInt!
  tokenAddress: Bytes!
  details: QuestChainTokenMetadata!
  owners: [User!]!
}

type QuestChainTokenMetadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  animationURL: String
  externalURL: String
  mimeType: String
}

type QuestChain @entity {
  id: ID!
  paused: Boolean!
  chainId: String!
  address: Bytes!
  factoryAddress: Bytes!
  numCompletedQuesters: Int!
  completedQuesters: [User!]!
  numQuesters: Int!
  questers: [User!]!
  owners: [User!]!
  admins: [User!]!
  reviewers: [User!]!
  editors: [User!]!
  createdBy: User!
  createdAt: BigInt!
  updatedAt: BigInt!
  editedBy: User
  editedAt: BigInt
  creationTxHash: Bytes!
  details: QuestChainMetadata
  questsPassed: [QuestStatus!]!
  questsFailed: [QuestStatus!]!
  questsInReview: [QuestStatus!]!
  questCount: Int! # includes number of quests which are not paused
  totalQuestCount: Int! # includes all quests
  quests: [Quest!]! @derivedFrom(field: "questChain")
  edits: [QuestChainEdit!]! @derivedFrom(field: "questChain")
  status: [QuestStatus!]! @derivedFrom(field: "questChain")
  submittedProofs: [ProofSubmission!]! @derivedFrom(field: "questChain")
  submittedReviews: [ReviewSubmission!]! @derivedFrom(field: "questChain")
  token: QuestChainToken! @derivedFrom(field: "questChain")
  version: String!
  premium: Boolean!
}

type QuestChainMetadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  externalURL: String
  slug: String
  categories: [Category!]
  search: String
}

type Category @entity {
  id: ID!
  name: String!
}

type QuestChainEdit @entity {
  id: ID!
  questChain: QuestChain!
  editor: User!
  timestamp: BigInt!
  txHash: Bytes!
  details: QuestChainMetadata
}

type Quest @entity {
  id: ID!
  optional: Boolean!
  skipReview: Boolean!
  paused: Boolean!
  questChain: QuestChain!
  questId: BigInt!
  numCompletedQuesters: Int!
  completedQuesters: [User!]!
  numQuesters: Int!
  questers: [User!]!
  details: QuestMetadata!
  createdBy: User!
  createdAt: BigInt!
  updatedAt: BigInt!
  editedBy: User
  editedAt: BigInt
  creationTxHash: Bytes!
  usersPassed: [QuestStatus!]!
  usersFailed: [QuestStatus!]!
  usersInReview: [QuestStatus!]!
  status: [QuestStatus!]! @derivedFrom(field: "quest")
  edits: [QuestEdit!]! @derivedFrom(field: "quest")
  submittedProofs: [ProofSubmission!]! @derivedFrom(field: "quest")
  submittedReviews: [ReviewSubmission!]! @derivedFrom(field: "quest")
}

type QuestMetadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  externalURL: String
  search: String
}

type QuestEdit @entity {
  id: ID!
  quest: Quest!
  editor: User!
  timestamp: BigInt!
  txHash: Bytes!
  details: QuestMetadata!
}

type User @entity {
  id: Bytes!
  questsPassed: [QuestStatus!]!
  questsFailed: [QuestStatus!]!
  questsInReview: [QuestStatus!]!
  questEdits: [QuestEdit!]! @derivedFrom(field: "editor")
  ownerOf: [QuestChain!]! @derivedFrom(field: "owners")
  adminOf: [QuestChain!]! @derivedFrom(field: "admins")
  editorOf: [QuestChain!]! @derivedFrom(field: "editors")
  reviewerOf: [QuestChain!]! @derivedFrom(field: "reviewers")
  status: [QuestStatus!]! @derivedFrom(field: "user")
  submittedProofs: [ProofSubmission!]! @derivedFrom(field: "user")
  submittedReviews: [ReviewSubmission!]! @derivedFrom(field: "reviewer")
  tokens: [QuestChainToken!]! @derivedFrom(field: "owners")
  completedQuests: [Quest!]! @derivedFrom(field: "completedQuesters")
  completedQuestChains: [QuestChain!]! @derivedFrom(field: "completedQuesters")
}

enum Status {
  init
  review
  pass
  fail
}

type QuestStatus @entity {
  id: ID!
  quest: Quest!
  questChain: QuestChain!
  user: User!
  status: Status!
  updatedAt: BigInt!
  submissions: [ProofSubmission!]!
  reviews: [ReviewSubmission!]! @derivedFrom(field: "questStatus")
}

type ProofSubmission @entity {
  id: ID!
  quest: Quest!
  questChain: QuestChain!
  questStatus: QuestStatus!
  user: User!
  details: SubmissionMetadata!
  timestamp: BigInt!
  txHash: Bytes!
}

type SubmissionMetadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  externalURL: String
  search: String
}

type ReviewSubmission @entity {
  id: ID!
  quest: Quest!
  questChain: QuestChain!
  questStatus: QuestStatus!
  proof: ProofSubmission
  accepted: Boolean!
  user: User!
  reviewer: User!
  details: SubmissionMetadata!
  timestamp: BigInt!
  txHash: Bytes!
}
